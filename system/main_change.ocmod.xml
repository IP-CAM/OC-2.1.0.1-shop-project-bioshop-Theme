<?xml version="1.0" encoding="utf-8"?>
<modification>
  <name>Main modification for shop</name>
  <code>default</code>
  <version>1.0</version>
  <author>Lugano</author>
  <link></link>
  <file path="system/engine/action.php">
      <operation>
	 <search regex ="true" quote = "true">
  <![CDATA[~public function __construct($route, $args = array()) {
		$parts = explode('/', str_replace('../', '', (string)$route));

		// Break apart the route
		while ($parts) {
			$file = DIR_APPLICATION . 'controller/' . implode('/', $parts) . '.php';

			if (is_file($file)) {
				$this->file = $file;

				$this->class = 'Controller' . preg_replace('/[^a-zA-Z0-9]/', '', implode('/', $parts));
				break;
			} else {
				$this->method = array_pop($parts);
			}
		}

		if (!$this->method) {
			$this->method = 'index';
		}

		$this->args = $args;
	}~]]>	
     </search>
     <add position ="replace"><![CDATA[
public function __construct($route, $args = array()) {
                    
                static $recursion = TRUE;
              
		$parts = explode('/', str_replace('../', '', (string)$route));

		// Break apart the route
		while ($parts) {
                    
                        if ($recursion) {
                    
                             $file = DIR_APPLICATION . 'controller/' . implode('/', $parts) . '.php';
                        } else {
                            
                             $file = $_SERVER['DOCUMENT_ROOT'] . '/admin/controller/' . implode('/', $parts) . '.php';
                        }
			

			if (is_file($file)) {
				$this->file = $file;

				$this->class = 'Controller' . preg_replace('/[^a-zA-Z0-9]/', '', implode('/', $parts));
				break;
			} else {
				$this->method = array_pop($parts);
			}
		}

		if (!$this->method) {
			$this->method = 'index';
		}
                
                if (empty($this->file) || empty($this->class) || empty($this->method)) {
                    
                    if ($recursion) {
                       $recursion = FALSE;
                       Action::__construct($route, $args);  
                    }
                   
                   
                }

		$this->args = $args;
	}]]>

                               
       </add>
    </operation>
  </file>
</modification>
